class Solution:
    def isSubsequence(self, s: str, t: str) -> bool:
        """Определяет является ли строка s подпоследовательностью t.

        Подпоследовательность строки - это строка, которая образована из исходной строки
        путем удаления некоторых (может быть ни одного) символов без нарушения
        относительных позиций оставшихся символов.

        Использует метод двух указателей.

        Временная сложность O(n) - в худшем случае проходим t строку полностью
        n - длина строки t.
        Пространственная сложность O(1) - выделяем память только на указатели.

        Args:
            s (str): Строка, которую проверяем на подпоследовательность
            t (str): Строка, в которой ищем подпоследовательность

        Returns:
            bool: True, если s является подпоследовательностью t, иначе False
        """
        # обработка краевого случая
        if len(s) > len(t):
            return False

        s_pointer = 0
        len_s = len(s) # оптимизация

        for char_t in t:
            # Если мы еще не нашли все символы s
            if s_pointer < len_s:
                # Если символы совпадают, продвигаем указатель в s
                if s[s_pointer] == char_t:
                    s_pointer += 1
            else:
                # Все символы s найдены, ранний выход
                break

        return s_pointer == len_s
